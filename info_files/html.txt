


style="color: green;" - аттрибут inline

Одиночные
<img> - картинка, указывается в аттрибуте src, class



<html> - это контейнер, в котором находится всё содержимое страницы
<head> предназначен для хранения других элементов, цель которых — помочь браузеру в работе с данными. Содержимое этого тега не отображается напрямую.
	<title> - заголовок , не работают комментарии
	<meta charset="имя кодировки">
	<meta name="keywords" content="разные, ключевые, слова"> для поисковика, устаревшее
	<meta name="description" content="краткое описание">
	<head>
		<link href="style.css" rel="stylesheet">     external
	</head>	будет работать и в другом месте страницы.
	<link rel="stylesheet" href="/assets/course2/style.css"/>
<body> предназначен для хранения содержания веб-страницы (контента), отображаемого в окне браузера.
	теги для логической разметки текста
	<p/> - абзац
	<h1/> - заголовок первого уровня. Градация 1-6 1 самый большой\важный
	<ul> - неупорядоченные\маркированный список
		<li> - элемент списка
	<ol> - упорядоченный список
		start - атрибут, изменяет начало нумерации
	Список определений
	<dl> обозначает сам список определений;
    <dt> обозначает термин;
    <dd> обозначает определение термина.
	<strong> -  жирный
	<b> - выделение
	<em> - курсив
	<i> - отличие
	<br> - перенос
	<hr> - разделитель
	<blockquote> предназначен для выделения длинных цитат, которые могут состоять из нескольких абзацев. Тег выделяет цитату как отдельный блок текста с отступами.
	<q> предназначен для выделения коротких цитат в предложениях. Текст внутри этого тега автоматически обрамляется кавычками.
	<cite> используется для того, чтобы выделить источник цитаты, название произведения или автора цитаты.
	Тег <sup> отображает текст в виде верхнего индекса.
	Тег <sub> отображает текст в виде нижнего индекса.
	<del> выделяет текст, который был удалён в новой версии документа.
	<ins> выделяет текст, который был добавлен в новой версии документа.
		datetime - аттрибут, время изменения
	<pre>, который обозначает «предварительно отформатированный текст». Браузер сохраняет и отображает все пробелы и переносы, которые есть внутри тега <pre>.
	<mark>, который обозначает выделенный текст.
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Ссылки
<a href="https://htmlacademy.ru">HTML Academy</a>
	href - аттрибут, значение линк
	Абсолютный адрес
		https://       — это протокол
		htmlacademy.ru — имя сервера, также называется домен или хост
		/courses       — путь
		Иногда абсолютные адреса записываются в укороченном виде, например вот так: /courses.
		В этом случае, браузер подставляет протокол и сервер текущей страницы. 
		Например, если на сайте https://htmlacademy.ru есть ссылка с адресом /courses, 
		то браузер для запроса преобразует её в такую: https://htmlacademy.ru/courses
	Относительный адрес
	Текущий адрес						Адрес в ссылке				Преобразуется в
	http://site.ru/news/1					2						http://site.ru/news/2
	http://site.ru/news/1					..						http://site.ru/
	http://site.ru/users/profile/1			../../contacts			http://site.ru/contacts
		
Ссылка может указывать на любую веб-страницу, на любой файл. Если щёлкнуть по ссылке, ведущей на файл, то браузер предложит его скачать.
Однако, если браузер умеет обрабатывать файлы этого типа, то содержимое файла откроется прямо в браузере. 		
https://htmlacademy.ru/courses/40/run/4

Ссылки с якорем
	<a href="#glava1">Глава 1</a>
	аттрибут, куда едем id="glava1"
	При щелчке на такую ссылку браузер найдёт на странице элемент с атрибутом id со значением glava1 и прокрутит окно страницы к нему. перезагрузки страницы не произойдёт.
Всплывающая подсказка
	<a title="Подсказка" href="#">		
width и height 
	value 100px\100    50%, что-то одно не указал -> вычисляется исходя из пропорций
alt - аттрибут, значение текста, который выводится при отключённых изображениях	
	
	
Форма записи URL
		<схема>://<логин>:<пароль>@<хост>:<порт>/<URL-путь>?<параметры>#<якорь>
		
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Таблицы
<table> обозначает таблицу.
	<tr> расшифровывается как «table row», обозначает строку таблицы.
		<th> - ячейка зоголовок, по умолчанию отличается от td
		<td> расшифровывается как «table data», обозначает ячейку внутри строки таблицы.
		<caption> - заголовок таблицы
	border -аттрибут, CSS манипуляция рамками
	colspan - аттрибут для объединения ячеек по горизонтали
	rowspan -аттрибут для объединения ячеек по вертикали
	table {
    border: 3px solid black;
	}
	
	td {
    border: 3px solid lightgray; границы
	}
		border-collapse: collapse - убирает двойные рамки
		border-collapse: separate
		border-top,
		border-right,
		border-bottom,
		border-left
	cellpadding - аттрибут, задаём отступы внутри таблицы
	
	CSS
	padding: 10px; - для ячеек отступы
	padding-top,
	padding-right,
	padding-bottom,
	padding-left
	
	border-spacing - для таблицы
	solid
lightgray - цвет рамок

caption CSS
По вертикали заголовок таблицы перемещается CSS-свойством caption-side со значениями top и bottom, которые обозначают до и после таблицы соответственно.
По горизонтали заголовок таблицы выравнивается CSS-свойством text-align со значениями left, right и center.
Выравнивание содержимого ячеек
 text-align - горизонтали	left, center и right
 vertical-align - вертикали	top, middle и bottom
 
background-color — задаёт цвет фона,
color — цвет текста,
border-color — цвет рамок.

table {
  width: 100px;
  height: 100px;
}
Стоит отметить, что у таблицы есть минимальные размеры, которые зависят от содержания, 
меньше которых она не сожмётся, какое бы значение ширины или высоты ни задавалось.
px,%, auto-по умолчанию

Есть два варианта добавления стилей ячейкам:

    Назначать ячейкам уникальные имена классов, например, class="cell-11", и применять стили для этих классов.

    Использовать атрибут style, внутри которого можно писать CSS-код.
//-------------------------------------------------------------------------------------------------------------------
Форма
<form>
	action - аттрибут задаёт адрес, URL, отправки формы;
	method - аттрибут задаёт метод отправки формы. get\post
	enctype - аттрибут значение-multipart/form-dat для передачи файла
	<input> - поля формы
		type задаёт тип поля; text/
							  password/
							  submit-отправка value -надпись на кнопке/
							  checkbox аттрибут checked-стоит по умолчанию/
							  radio одно имя разные value Таким образом, атрибут value является для переключателей обязательным. Браузер отправляет на сервер значение value выбранного переключателя.
			                  file поле для загрузки файлов name - обязательный аттрибут
							  hidden - скрытое поле, запоняет не пользователь							  
		name задаёт имя поля.
		id поля ввода обозначает идентификатор.
		Атрибут value задаёт значение поля ввода по умолчанию
		Есть специальный тег, который позволяет смело сказать: «Этот кусок текста действительно подпись к этому полю!». Это парный тег <label>.
		<label>
			Подпись <input type="text" name="username">
		</label>
		
		<label for="user-field-id">Имя пользователя</label>
		...
		много-много других тегов
		...
		<input id="user-field-id" type="text" name="username">
		
		<textarea> - Многострочное текстовое поле, парный тега . 
			атрибуты name и id, которые аналогичны атрибутам текстового поля.
			rows, cols - высота ширина аттрибуты
			значение тега - значение по умолчанию
		
		<select> - раскрывающийся список 
			name, id аттрибуты
			multiple аттрибут мультиселектор size высота
			<option> 
				value - вариант ответа задан? да - едет на сервер нет - и значение тега -  подпись
				selected - выбран по умолчанию
			
		


inline
<head>
  <style>
    CSS-код
  </style>
</head>


<script>
  JavaScript-код
</script>

<script src="scripts.js"></script>
А ещё внешние ресурсы кешируются браузером, что позволяет ускорить загрузку страниц. А в вебе это важно.










//----------------------------------------------------------------------------------------------------------------------------------
«CSS-правило».
селектор {
  свойство1: значение;
  свойство2: значение;
}

селектор - имя тега или имя класса\псевдокласса, по id
класс задаётся тегу через аттрибут class

<p class="help"></p>
<p class="help error"></p> 2 класса

.help { ... }
.error { ... }
<span> - выделение?
Свойства:
text-decoration: underline; - подчёркивание
font-weight: bold; - жирный
font-style:italic; - курсив

margin-left: 50px;   - отступ влево
padding: 20px; - отступы во всех направлениях
width:50%;  - ширина

Позиционирование
position - переключает режими позиционирования элемента
top, right, bottom, left - расположение элемента
z-index -  порядок слоёв


position:absolute; -  исключение из потока html документа



Типичный веб-сайт состоит из шапки, главного меню, блока с основным содержанием, боковых колонок, подвала. Эти блоки могут быть расположены друг под другом, в несколько колонок или ещё сложнее. Такое взаимное расположение основных блоков сайта и называют «сеткой» или «раскладкой».

Всё дело в том, что стили для элемента могут быть определены в нескольких местах: внутри одного файла стилей и в разных файлах стилей.

Браузер находит все CSS-правила, затрагивающие данный элемент, а затем комбинирует их и получает итоговый список свойств для этого элемента. Комбинирование свойств производится по чётким правилам, которые опираются на приоритетность и специфичность.
Можно переопределять стили. Насколько понял: у класса приоритет над тегом.
1.CSS-правила в значении атрибута style самые приоритетные,
2.за ними идёт селектор с id,
3.затем селектор с классом,
4.затем селектор с именем тега. 

1. класс - синий
2. класс - зелёный 
3. класс - синий и зелёный  - переопределится на зелёный 
Если селекторы однотипные, как в нашем случае, то тогда более приоритетным является CSS-правило, которое расположено ниже в коде.

Другой важный механизм CSS — это наследование. Он заключается в том, что часть стилей может передаваться от родительского элемента(html тег) к дочерним (вложенным в него).

К ненаследуемым свойствам относятся: ширина, высота, отступы, режим позиционирования и другие. Согласитесь, было бы странно задать отступы для body и обнаружить, что у всех вложенных элементов тоже появились отступы.


float:left\right

background-color: #dff0d8; цвет фона 
color: #468847; - цвет текста 
border-radius: 5px; закругления рамки 
border: 1px solid #cccccc; - рамка, ширина в сиволах?


Селекторы 
Контекстные\вложенные - состоят из несольких частей, применяют стили к элементу только,если он вложен в нужный элемент
	p strong { ... }
	ul .hit { ... }
	.footer .menu a { ... }
	.shooter-1 .second,
	.shooter-1 .fifth
           {
           background-color:red;
           } 
Соседние селекторы
	селектор1 + селектор2
	Стили применятся к элементу, подходящему под селектор2, только если сразу перед ним расположен элемент, подходящий под селектор1.
Можно комбинировать
Дочерние селекторы
	Потомком называются любые элементы, расположенные внутри родительского элемента. А дочерними элементами называются ближайшие потомки.
	ul > li или ul > li > span
Псевдоклассы
	селектор:псевдокласс
	first-child позволяет выбрать первый дочерний элемент родителя
	last-child — последний дочерний элемент.
	селектор:nth-child(выражение) - подставляем число\формулу, селектор по порядковому номеру 
		li:nth-child(2n) - все чётные элементы
	:hover - наведён курсор мыши, кнопка не нажата
		селектор1:hover селектор2
		li.top ul.submenu {
			display: none;
		}

		li.top:hover ul.submenu {
			display: block;
		}
		//---------------
		em {
			display: none;
		}
		tr:hover em{
			display:inline;
		}
    :link выбирает ещё не посещённые ссылки.
    :visited выбирает посещённые ссылки.
    :active выбирает активные ссылки (кнопка мыши зажата на ссылке).
		Пример порядок правил
		a:link { ... }
		a:visited { ... }
		a:hover { ... }
		a:active { ... }
	:focus - объект в фокусе навёр курсор мыши\TAB
	Селекторы по аттрибутам
		1. input[checked] { ... }
		2. input[type="text"] { ... }
	Селектор по id
		#fullname  - #значение атрибута id 


